import pyttsx3
import speech_recognition as sr 
import datetime
import wikipedia 
import webbrowser
import os
import smtplib

engine = pyttsx3.init('sapi5')
voices = engine.getProperty('voices')

engine.setProperty('voice', voices[0].id)


def speak(audio):
    engine.say(audio)
    engine.runAndWait()


def wishMe():
    hour = int(datetime.datetime.now().hour)
    if hour>=0 and hour<12:
        print("Good Morning!")
        speak("Good Morning!")
        

    elif hour>=12 and hour<18:
        print("Good Afternoon!")
        speak("Good Afternoon!")   

    else:
        print("Good Evening!")
        speak("Good Evening!")  

    speak("I am Devid . Please tell me how may I help you")       

def takeCommand():
    #It takes microphone input from the user and returns string output

    r = sr.Recognizer()
    with sr.Microphone() as source:
        print("Listening...")
        r.pause_threshold = 1
        audio = r.listen(source)

    try:
        print("Recognizing...")    
        query = r.recognize_google(audio, language='en-in')
        print(f"User said: {query}\n")

    except Exception as e:
        # print(e)    
        speak("Say that again please...")
        print("Say that again please...")  
        return "None"
    return query

def sendEmail(to, content):
    server = smtplib.SMTP('smtp.gmail.com', 587)
    server.ehlo()
    server.starttls()
    server.login('kuladi03@gmail.com', 'czqekafzexvoimzz')
    server.sendmail('kuladi03@gmail.com', to, content)
    server.close()

if __name__ == "__main__":
    wishMe()
    while True:
    # if 1:
        query = takeCommand().lower()  # type: ignore

        # Logic for executing tasks based on query
        # if 'wikipedia' in query:
        #     speak('Searching Wikipedia...')
        #     query = query.replace("wikipedia", "")
        #     results = wikipedia.summary(query, sentences=2)
        #     speak("According to Wikipedia")
        #     print(results)
        #     speak(results)

        # if 'open' in query:
        #     webbrowser.open("www."+query+".com") 

        # list = ["Google","Facebook","YouTube"]
        
        if 'open' in query:
            if query[0:4] == "open":
                query = query[5:]
                Result = webbrowser.open(query+".com")

        elif 'open geeksforgeeks' in query:
            webbrowser.open("geeksforgeeks.org")

        # elif query[0:4] == "open ":
        #     temp = query[4:]
        #     if temp in query:
        #         webbrowser.open(temp+".com")
        
        elif '.com' in query:
            Result = webbrowser.open(query)

        elif 'what is' in query:
            Result = webbrowser.open("https://www.google.com/search?q="+query)

        elif 'play music' in query:
            music_dir = 'C:\\Users\\Aditya\\Music'
            songs = os.listdir(music_dir)
            print(songs)    
            os.startfile(os.path.join(music_dir, songs[0]))

        elif 'time' in query:
            strTime = datetime.datetime.now().strftime("%H:%M:%S")  
            print(strTime)  
            speak(f"Sir, the time is {strTime}")

        elif 'open code' in query:
            codePath = "D:\\Mini Project"
            os.startfile(codePath)

        elif 'tell me' in query:
            speak('Searching Internet...')
            query = query.replace("wikipedia", "")
            results = wikipedia.summary(query, sentences=4)
            speak("According to Internet")
            print(results)
            speak(results)

        elif 'bye' in query:
            speak("See you later")
            print("See you later!!!")
            break

        elif 'send mail' in query:
            try:
                speak("What should I say?")
                content = takeCommand()
                speak("To whom i am supposed to send this mail , please type their Email : ")
                to =  input("")
                sendEmail(to, content)
                speak("Email has been sent!")
            except Exception as e:
                print(e)
                speak("Sorry my friend . I am not able to send this email")    
